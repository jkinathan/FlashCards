{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/kinathan/Desktop/RelWorx/FlashCards/components/Deck/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { white, green } from \"../../utils/colors\";\nimport { connect } from 'react-redux';\n\nvar Deck = function (_Component) {\n  _inherits(Deck, _Component);\n\n  var _super = _createSuper(Deck);\n\n  function Deck() {\n    _classCallCheck(this, Deck);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Deck, [{\n    key: \"render\",\n    value: function render() {\n      var deck = this.props.deck;\n\n      if (deck === undefined) {\n        return React.createElement(View, {\n          style: styles.deckContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 18\n          }\n        });\n      }\n\n      return React.createElement(View, {\n        style: styles.deckContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.deckText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }\n      }, \"Deck: \", deck.title)), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.cardText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }\n      }, \"No of Card: \", deck.questions.length)));\n    }\n  }]);\n\n  return Deck;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state, _ref) {\n  var id = _ref.id;\n  var deck = state[id];\n  return {\n    deck: deck\n  };\n};\n\nvar styles = StyleSheet.create({\n  deckText: {\n    fontSize: 28,\n    color: white\n  },\n  cardText: {\n    fontSize: 18,\n    color: white\n  },\n  deckContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexBasis: 120,\n    minHeight: 120,\n    borderWidth: 1,\n    borderColor: green,\n    backgroundColor: green,\n    borderRadius: 5,\n    marginBottom: 10\n  }\n});\nexport default connect(mapStateToProps)(Deck);","map":{"version":3,"sources":["/home/kinathan/Desktop/RelWorx/FlashCards/components/Deck/index.js"],"names":["React","Component","white","green","connect","Deck","deck","props","undefined","styles","deckContainer","deckText","title","cardText","questions","length","mapStateToProps","state","id","StyleSheet","create","fontSize","color","alignItems","justifyContent","flexBasis","minHeight","borderWidth","borderColor","backgroundColor","borderRadius","marginBottom"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,SAASC,KAAT,EAAgBC,KAAhB;AACA,SAASC,OAAT,QAAwB,aAAxB;;IAEMC,I;;;;;;;;;;;;;6BAEO;AAAA,UAEGC,IAFH,GAEY,KAAKC,KAFjB,CAEGD,IAFH;;AAIL,UAAIA,IAAI,KAAKE,SAAb,EAAwB;AACtB,eAAO,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEC,MAAM,CAACC,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AACC,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACC,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAqCL,IAAI,CAACM,KAA1C,CADF,CADF,EAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACI,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAA2CP,IAAI,CAACQ,SAAL,CAAeC,MAA1D,CADF,CAJF,CADF;AAUL;;;;EAnBcd,S;;AAsBnB,IAAMe,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,QAAmB;AAAA,MAATC,EAAS,QAATA,EAAS;AACvC,MAAMZ,IAAI,GAAGW,KAAK,CAACC,EAAD,CAAlB;AAEA,SAAO;AACLZ,IAAAA,IAAI,EAAJA;AADK,GAAP;AAGH,CAND;;AASA,IAAMG,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC7BT,EAAAA,QAAQ,EAAE;AACRU,IAAAA,QAAQ,EAAE,EADF;AAERC,IAAAA,KAAK,EAAEpB;AAFC,GADmB;AAK7BW,EAAAA,QAAQ,EAAE;AACRQ,IAAAA,QAAQ,EAAE,EADF;AAERC,IAAAA,KAAK,EAAEpB;AAFC,GALmB;AAS7BQ,EAAAA,aAAa,EAAE;AACba,IAAAA,UAAU,EAAE,QADC;AAEbC,IAAAA,cAAc,EAAE,QAFH;AAGbC,IAAAA,SAAS,EAAE,GAHE;AAIbC,IAAAA,SAAS,EAAE,GAJE;AAKbC,IAAAA,WAAW,EAAE,CALA;AAMbC,IAAAA,WAAW,EAAEzB,KANA;AAOb0B,IAAAA,eAAe,EAAE1B,KAPJ;AAQb2B,IAAAA,YAAY,EAAE,CARD;AASbC,IAAAA,YAAY,EAAE;AATD;AATc,CAAlB,CAAf;AAsBA,eAAe3B,OAAO,CAACY,eAAD,CAAP,CAAyBX,IAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { View, Text, StyleSheet } from 'react-native';\nimport { white, green } from '../../utils/colors';\nimport { connect } from 'react-redux';\n\nclass Deck extends Component {\n\n    render() {\n\n        const { deck } = this.props;\n\n        if (deck === undefined) {\n          return <View style={styles.deckContainer} />;\n        }\n          return (\n            <View style={styles.deckContainer}>\n              <View>\n                <Text style={styles.deckText}>Deck: {deck.title}</Text>\n              </View>\n              <View>\n                <Text style={styles.cardText}>No of Card: {deck.questions.length}</Text>\n              </View>\n            </View>\n        );\n    }\n}\n\nconst mapStateToProps = (state, { id }) => {\n    const deck = state[id];\n  \n    return {\n      deck\n    };\n};\n\n\nconst styles = StyleSheet.create({\n    deckText: {\n      fontSize: 28,\n      color: white\n    },\n    cardText: {\n      fontSize: 18,\n      color: white\n    },\n    deckContainer: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexBasis: 120,\n      minHeight: 120,\n      borderWidth: 1,\n      borderColor: green,\n      backgroundColor: green,\n      borderRadius: 5,\n      marginBottom: 10\n    }\n});\n\nexport default connect(mapStateToProps)(Deck);\n  "]},"metadata":{},"sourceType":"module"}