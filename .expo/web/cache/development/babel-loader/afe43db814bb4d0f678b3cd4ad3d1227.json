{"ast":null,"code":"import AsyncStorage from '@react-native-community/async-storage';\nimport * as Notifications from 'expo-notifications';\nimport * as Permissions from 'expo-permissions';\nvar NOTIFICATION_KEY = 'MobileFlashCards:notifications';\n\nfunction createNotification() {\n  return {\n    title: 'Log your stats!',\n    body: \"ðŸ‘‹ Don't forget to look any flash card today!\",\n    ios: {\n      sound: true\n    },\n    android: {\n      sound: true,\n      priority: 'high',\n      sticky: false,\n      vibrate: true\n    }\n  };\n}\n\nexport function setLocalNotification() {\n  return AsyncStorage.getItem(NOTIFICATION_KEY).then(JSON.parse).then(function (data) {\n    if (data === null) {\n      Permissions.askAsync(Permissions.NOTIFICATIONS).then(function (_ref) {\n        var status = _ref.status;\n\n        if (status === 'granted') {\n          Notifications.cancelAllScheduledNotificationsAsync().then(function () {\n            var tomorrow = new Date();\n            tomorrow.setDate(tomorrow.getDate() + 1);\n            tomorrow.setHours(20);\n            tomorrow.setMinutes(0);\n            Notifications.scheduleNotificationAsync({\n              content: createNotification(),\n              trigger: tomorrow\n            }).then(function () {\n              AsyncStorage.setItem(NOTIFICATION_KEY, JSON.stringify(true));\n              console.log('reminder set!');\n            });\n          });\n        }\n      });\n    }\n  });\n}\nexport function clearLocalNotification() {\n  return AsyncStorage.removeItem(NOTIFICATION_KEY).then(Notifications.cancelAllScheduledNotificationsAsync);\n}","map":{"version":3,"sources":["/home/kinathan/Desktop/RelWorx/FlashCards/utils/notification.js"],"names":["AsyncStorage","Notifications","Permissions","NOTIFICATION_KEY","createNotification","title","body","ios","sound","android","priority","sticky","vibrate","setLocalNotification","getItem","then","JSON","parse","data","askAsync","NOTIFICATIONS","status","cancelAllScheduledNotificationsAsync","tomorrow","Date","setDate","getDate","setHours","setMinutes","scheduleNotificationAsync","content","trigger","setItem","stringify","console","log","clearLocalNotification","removeItem"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,OAAO,KAAKC,aAAZ,MAA+B,oBAA/B;AACA,OAAO,KAAKC,WAAZ,MAA6B,kBAA7B;AAKA,IAAMC,gBAAgB,GAAG,gCAAzB;;AAKA,SAASC,kBAAT,GAA+B;AAC3B,SAAO;AACHC,IAAAA,KAAK,EAAE,iBADJ;AAEHC,IAAAA,IAAI,EAAE,+CAFH;AAGHC,IAAAA,GAAG,EAAE;AACDC,MAAAA,KAAK,EAAE;AADN,KAHF;AAMHC,IAAAA,OAAO,EAAE;AACLD,MAAAA,KAAK,EAAE,IADF;AAELE,MAAAA,QAAQ,EAAE,MAFL;AAGLC,MAAAA,MAAM,EAAE,KAHH;AAILC,MAAAA,OAAO,EAAE;AAJJ;AANN,GAAP;AAaH;;AAKD,OAAO,SAASC,oBAAT,GAAgC;AACnC,SAAOb,YAAY,CAACc,OAAb,CAAqBX,gBAArB,EACJY,IADI,CACCC,IAAI,CAACC,KADN,EAEJF,IAFI,CAEC,UAAAG,IAAI,EAAI;AACZ,QAAIA,IAAI,KAAK,IAAb,EAAmB;AACjBhB,MAAAA,WAAW,CAACiB,QAAZ,CAAqBjB,WAAW,CAACkB,aAAjC,EACGL,IADH,CACQ,gBAAgB;AAAA,YAAbM,MAAa,QAAbA,MAAa;;AACpB,YAAIA,MAAM,KAAK,SAAf,EAA0B;AACxBpB,UAAAA,aAAa,CACVqB,oCADH,GAEGP,IAFH,CAEQ,YAAM;AACV,gBAAIQ,QAAQ,GAAG,IAAIC,IAAJ,EAAf;AACAD,YAAAA,QAAQ,CAACE,OAAT,CAAiBF,QAAQ,CAACG,OAAT,KAAqB,CAAtC;AACAH,YAAAA,QAAQ,CAACI,QAAT,CAAkB,EAAlB;AACAJ,YAAAA,QAAQ,CAACK,UAAT,CAAoB,CAApB;AAEA3B,YAAAA,aAAa,CAAC4B,yBAAd,CAAwC;AACtCC,cAAAA,OAAO,EAAE1B,kBAAkB,EADW;AAEtC2B,cAAAA,OAAO,EAAER;AAF6B,aAAxC,EAICR,IAJD,CAIM,YAAM;AACVf,cAAAA,YAAY,CAACgC,OAAb,CAAqB7B,gBAArB,EAAuCa,IAAI,CAACiB,SAAL,CAAe,IAAf,CAAvC;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD,aAPD;AAQD,WAhBH;AAiBD;AACF,OArBH;AAsBD;AACF,GA3BI,CAAP;AA4BD;AAKH,OAAO,SAASC,sBAAT,GAAmC;AACtC,SAAOpC,YAAY,CAACqC,UAAb,CAAwBlC,gBAAxB,EACFY,IADE,CACGd,aAAa,CAACqB,oCADjB,CAAP;AAEH","sourcesContent":["import AsyncStorage from '@react-native-community/async-storage';\nimport * as Notifications from 'expo-notifications';\nimport * as Permissions from 'expo-permissions';\n\n/**\n * @description Define NOTIFICATION KEY\n */\nconst NOTIFICATION_KEY = 'MobileFlashCards:notifications'\n\n/**\n * @description Define a function to create notification\n */\nfunction createNotification () {\n    return {\n        title: 'Log your stats!',\n        body: \"ðŸ‘‹ Don't forget to look any flash card today!\",\n        ios: {\n            sound: true,\n        },\n        android: {\n            sound: true,\n            priority: 'high',\n            sticky: false,\n            vibrate: true,\n        }\n    }\n}\n\n/**\n * @description Define a function to set local notification\n */\nexport function setLocalNotification() {\n    return AsyncStorage.getItem(NOTIFICATION_KEY)\n      .then(JSON.parse)\n      .then(data => {\n        if (data === null) {\n          Permissions.askAsync(Permissions.NOTIFICATIONS)\n            .then(({ status }) => {\n              if (status === 'granted') {\n                Notifications\n                  .cancelAllScheduledNotificationsAsync()\n                  .then(() => {\n                    let tomorrow = new Date()\n                    tomorrow.setDate(tomorrow.getDate() + 1)\n                    tomorrow.setHours(20)\n                    tomorrow.setMinutes(0)\n  \n                    Notifications.scheduleNotificationAsync({\n                      content: createNotification(),\n                      trigger: tomorrow,\n                    })\n                    .then(() => {\n                      AsyncStorage.setItem(NOTIFICATION_KEY, JSON.stringify(true))\n                      console.log('reminder set!')\n                    })\n                  })\n              }\n            })\n        }\n      })\n  }\n\n/**\n * @description Define a function to set local notification\n */\nexport function clearLocalNotification () {\n    return AsyncStorage.removeItem(NOTIFICATION_KEY)\n        .then(Notifications.cancelAllScheduledNotificationsAsync)\n}"]},"metadata":{},"sourceType":"module"}