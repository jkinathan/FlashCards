{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/kinathan/Desktop/RelWorx/FlashCards/components/NewCard/NewCard.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { addCardToTheDeck as _addCardToTheDeck } from \"../../actions/index\";\nimport CustomClickButton from \"../component/CustomClickButton\";\nimport { white, azure, purple, gray, lightPurp } from \"../../utils/colors\";\nimport { connect } from 'react-redux';\n\nvar NewCard = function (_Component) {\n  _inherits(NewCard, _Component);\n\n  var _super = _createSuper(NewCard);\n\n  function NewCard() {\n    var _this;\n\n    _classCallCheck(this, NewCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      question: '',\n      answer: ''\n    };\n\n    _this.handleQuestionChange = function (question) {\n      _this.setState({\n        question: question\n      });\n    };\n\n    _this.handleAnswerChange = function (answer) {\n      _this.setState({\n        answer: answer\n      });\n    };\n\n    _this.handleSubmit = function () {\n      var _this$props = _this.props,\n          addCardToTheDeck = _this$props.addCardToTheDeck,\n          title = _this$props.title,\n          navigation = _this$props.navigation;\n      var card = {\n        question: _this.state.question,\n        answer: _this.state.answer\n      };\n      addCardToTheDeck(title, card);\n\n      _this.setState({\n        question: '',\n        answer: ''\n      });\n\n      navigation.navigate(\"DeckDetails\");\n    };\n\n    return _this;\n  }\n\n  _createClass(NewCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.block,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }, \"Add a question\")), React.createElement(View, {\n        style: [styles.block],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }\n      }, React.createElement(TextInput, {\n        style: styles.input,\n        value: this.state.question,\n        onChangeText: this.handleQuestionChange,\n        placeholder: \"Question\",\n        autoFocus: true,\n        returnKeyType: \"next\",\n        onSubmitEditing: function onSubmitEditing() {\n          return _this2.answerTextInput.focus();\n        },\n        blurOnSubmit: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      })), React.createElement(View, {\n        style: [styles.block],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }\n      }, React.createElement(TextInput, {\n        style: styles.input,\n        value: this.state.answer,\n        onChangeText: this.handleAnswerChange,\n        placeholder: \"Answer\",\n        ref: function ref(input) {\n          _this2.answerTextInput = input;\n        },\n        returnKeyType: \"done\",\n        onSubmitEditing: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      })), React.createElement(CustomClickButton, {\n        btnStyle: {\n          backgroundColor: gray,\n          borderColor: '#fff'\n        },\n        onPress: this.handleSubmit,\n        disabled: this.state.question === '' || this.state.answer === '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }\n      }, \"Submit\")), React.createElement(View, {\n        style: {\n          height: '30%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return NewCard;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 16,\n    paddingLeft: 16,\n    paddingRight: 16,\n    paddingBottom: 16,\n    backgroundColor: azure,\n    justifyContent: 'space-around'\n  },\n  block: {\n    marginBottom: 20\n  },\n  title: {\n    textAlign: 'center',\n    fontSize: 32\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: purple,\n    backgroundColor: '#fff',\n    paddingLeft: 10,\n    paddingRight: 10,\n    borderRadius: 5,\n    fontSize: 20,\n    height: 40\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state, _ref) {\n  var navigation = _ref.navigation;\n  var title = navigation.getParam('title', 'undefined');\n  return {\n    title: title\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addCardToTheDeck: function addCardToTheDeck(title, card) {\n      return dispatch(_addCardToTheDeck(title, card));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewCard);","map":{"version":3,"sources":["/home/kinathan/Desktop/RelWorx/FlashCards/components/NewCard/NewCard.js"],"names":["React","Component","addCardToTheDeck","CustomClickButton","white","azure","purple","gray","lightPurp","connect","NewCard","state","question","answer","handleQuestionChange","setState","handleAnswerChange","handleSubmit","props","title","navigation","card","navigate","styles","container","block","input","answerTextInput","focus","backgroundColor","borderColor","height","StyleSheet","create","flex","paddingTop","paddingLeft","paddingRight","paddingBottom","justifyContent","marginBottom","textAlign","fontSize","borderWidth","borderRadius","mapStateToProps","getParam","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAEA,SAASC,gBAAgB,IAAhBA,iBAAT;AACA,OAAOC,iBAAP;AACA,SAASC,KAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,IAA9B,EAAoCC,SAApC;AACA,SAASC,OAAT,QAAwB,aAAxB;;IAEMC,O;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,MAAM,EAAE;AAFJ,K;;UAKRC,oB,GAAuB,UAAAF,QAAQ,EAAI;AAC/B,YAAKG,QAAL,CAAc;AAAEH,QAAAA,QAAQ,EAARA;AAAF,OAAd;AACH,K;;UAEDI,kB,GAAqB,UAAAH,MAAM,EAAI;AAC3B,YAAKE,QAAL,CAAc;AAAEF,QAAAA,MAAM,EAANA;AAAF,OAAd;AACH,K;;UAEDI,Y,GAAe,YAAM;AAAA,wBAE+B,MAAKC,KAFpC;AAAA,UAEThB,gBAFS,eAETA,gBAFS;AAAA,UAESiB,KAFT,eAESA,KAFT;AAAA,UAEgBC,UAFhB,eAEgBA,UAFhB;AAIjB,UAAMC,IAAI,GAAG;AACXT,QAAAA,QAAQ,EAAE,MAAKD,KAAL,CAAWC,QADV;AAEXC,QAAAA,MAAM,EAAE,MAAKF,KAAL,CAAWE;AAFR,OAAb;AAKAX,MAAAA,gBAAgB,CAACiB,KAAD,EAAQE,IAAR,CAAhB;;AAEA,YAAKN,QAAL,CAAc;AAAEH,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,MAAM,EAAE;AAAxB,OAAd;;AAEAO,MAAAA,UAAU,CAACE,QAAX,CAAoB,aAApB;AACH,K;;;;;;;6BAEQ;AAAA;;AACL,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACJ,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,CADF,EAIE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACI,MAAM,CAACE,KAAR,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,KAAK,EAAEF,MAAM,CAACG,KADhB;AAEE,QAAA,KAAK,EAAE,KAAKf,KAAL,CAAWC,QAFpB;AAGE,QAAA,YAAY,EAAE,KAAKE,oBAHrB;AAIE,QAAA,WAAW,EAAC,UAJd;AAKE,QAAA,SAAS,EAAE,IALb;AAME,QAAA,aAAa,EAAC,MANhB;AAOE,QAAA,eAAe,EAAE;AAAA,iBAAM,MAAI,CAACa,eAAL,CAAqBC,KAArB,EAAN;AAAA,SAPnB;AAQE,QAAA,YAAY,EAAE,KARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJF,EAgBE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACL,MAAM,CAACE,KAAR,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,KAAK,EAAEF,MAAM,CAACG,KADhB;AAEE,QAAA,KAAK,EAAE,KAAKf,KAAL,CAAWE,MAFpB;AAGE,QAAA,YAAY,EAAE,KAAKG,kBAHrB;AAIE,QAAA,WAAW,EAAC,QAJd;AAKE,QAAA,GAAG,EAAE,aAAAU,KAAK,EAAI;AACZ,UAAA,MAAI,CAACC,eAAL,GAAuBD,KAAvB;AACD,SAPH;AAQE,QAAA,aAAa,EAAC,MARhB;AASE,QAAA,eAAe,EAAE,KAAKT,YATxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAhBF,EA6BE,oBAAC,iBAAD;AACE,QAAA,QAAQ,EAAE;AAAEY,UAAAA,eAAe,EAAEtB,IAAnB;AAAyBuB,UAAAA,WAAW,EAAE;AAAtC,SADZ;AAEE,QAAA,OAAO,EAAE,KAAKb,YAFhB;AAGE,QAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWC,QAAX,KAAwB,EAAxB,IAA8B,KAAKD,KAAL,CAAWE,MAAX,KAAsB,EAHhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA7BF,CADF,EAsCE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEkB,UAAAA,MAAM,EAAE;AAAV,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAtCF,CADF;AA0CH;;;;EA1EiB9B,S;;AA6EtB,IAAMsB,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC7BT,EAAAA,SAAS,EAAE;AACTU,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,EAFH;AAGTC,IAAAA,WAAW,EAAE,EAHJ;AAITC,IAAAA,YAAY,EAAE,EAJL;AAKTC,IAAAA,aAAa,EAAE,EALN;AAMTT,IAAAA,eAAe,EAAExB,KANR;AAOTkC,IAAAA,cAAc,EAAE;AAPP,GADkB;AAU7Bd,EAAAA,KAAK,EAAE;AACLe,IAAAA,YAAY,EAAE;AADT,GAVsB;AAa7BrB,EAAAA,KAAK,EAAE;AACLsB,IAAAA,SAAS,EAAE,QADN;AAELC,IAAAA,QAAQ,EAAE;AAFL,GAbsB;AAiB7BhB,EAAAA,KAAK,EAAE;AACLiB,IAAAA,WAAW,EAAE,CADR;AAELb,IAAAA,WAAW,EAAExB,MAFR;AAGLuB,IAAAA,eAAe,EAAE,MAHZ;AAILO,IAAAA,WAAW,EAAE,EAJR;AAKLC,IAAAA,YAAY,EAAE,EALT;AAMLO,IAAAA,YAAY,EAAE,CANT;AAOLF,IAAAA,QAAQ,EAAE,EAPL;AAQLX,IAAAA,MAAM,EAAE;AARH;AAjBsB,CAAlB,CAAf;;AA6BA,IAAMc,eAAe,GAAG,SAAlBA,eAAkB,CAAClC,KAAD,QAA2B;AAAA,MAAjBS,UAAiB,QAAjBA,UAAiB;AAC/C,MAAMD,KAAK,GAAGC,UAAU,CAAC0B,QAAX,CAAoB,OAApB,EAA6B,WAA7B,CAAd;AACA,SAAO;AACL3B,IAAAA,KAAK,EAALA;AADK,GAAP;AAGD,CALH;;AAQA,IAAM4B,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,SACvB;AACE9C,IAAAA,gBAAgB,EAAE,0BAACiB,KAAD,EAAQE,IAAR;AAAA,aAAe2B,QAAQ,CAAC9C,iBAAgB,CAACiB,KAAD,EAAQE,IAAR,CAAjB,CAAvB;AAAA;AADpB,GADuB;AAAA,CAA3B;;AAMA,eAAeZ,OAAO,CAACoC,eAAD,EAAiBE,kBAAjB,CAAP,CAA4CrC,OAA5C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Text, View, TextInput, StyleSheet } from 'react-native';\nimport { addCardToTheDeck } from '../../actions/index';\nimport CustomClickButton from '../component/CustomClickButton';\nimport { white,azure, purple, gray, lightPurp } from '../../utils/colors';\nimport { connect } from 'react-redux';\n\nclass NewCard extends Component {\n\n    state = {\n        question: '',\n        answer: ''\n    };\n      \n    handleQuestionChange = question => {\n        this.setState({ question });\n    };\n\n    handleAnswerChange = answer => {\n        this.setState({ answer });\n    };\n\n    handleSubmit = () => {\n        \n        const { addCardToTheDeck, title, navigation } = this.props;\n\n        const card = {\n          question: this.state.question,\n          answer: this.state.answer\n        };\n\n        addCardToTheDeck(title, card);\n    \n        this.setState({ question: '', answer: '' });\n\n        navigation.navigate(\"DeckDetails\");\n    };\n\n    render() {\n        return (\n          <View style={styles.container}>\n            <View>\n              <View style={styles.block}>\n                <Text style={styles.title}>Add a question</Text>\n              </View>\n              <View style={[styles.block]}>\n                <TextInput\n                  style={styles.input}\n                  value={this.state.question}\n                  onChangeText={this.handleQuestionChange}\n                  placeholder=\"Question\"\n                  autoFocus={true}\n                  returnKeyType=\"next\"\n                  onSubmitEditing={() => this.answerTextInput.focus()}\n                  blurOnSubmit={false}\n                />\n              </View>\n              <View style={[styles.block]}>\n                <TextInput\n                  style={styles.input}\n                  value={this.state.answer}\n                  onChangeText={this.handleAnswerChange}\n                  placeholder=\"Answer\"\n                  ref={input => {\n                    this.answerTextInput = input;\n                  }}\n                  returnKeyType=\"done\"\n                  onSubmitEditing={this.handleSubmit}\n                />\n              </View>\n              <CustomClickButton\n                btnStyle={{ backgroundColor: gray, borderColor: '#fff' }}\n                onPress={this.handleSubmit}\n                disabled={this.state.question === '' || this.state.answer === ''}\n              >\n                Submit\n              </CustomClickButton>\n            </View>\n            <View style={{ height: '30%' }} />\n          </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      paddingTop: 16,\n      paddingLeft: 16,\n      paddingRight: 16,\n      paddingBottom: 16,\n      backgroundColor: azure,\n      justifyContent: 'space-around'\n    },\n    block: {\n      marginBottom: 20\n    },\n    title: {\n      textAlign: 'center',\n      fontSize: 32\n    },\n    input: {\n      borderWidth: 1,\n      borderColor: purple,\n      backgroundColor: '#fff',\n      paddingLeft: 10,\n      paddingRight: 10,\n      borderRadius: 5,\n      fontSize: 20,\n      height: 40\n    }\n});\n\nconst mapStateToProps = (state, { navigation }) => {\n    const title = navigation.getParam('title', 'undefined');\n    return {\n      title\n    };\n  };\n  \n\nconst mapDispatchToProps = (dispatch) => (\n    {\n      addCardToTheDeck: (title, card)=>dispatch(addCardToTheDeck(title, card))\n    }\n)\n  \nexport default connect(mapStateToProps,mapDispatchToProps)(NewCard);"]},"metadata":{},"sourceType":"module"}