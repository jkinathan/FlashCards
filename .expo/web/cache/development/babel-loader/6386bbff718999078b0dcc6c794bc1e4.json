{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/kinathan/Desktop/RelWorx/FlashCards/components/NewDeck/NewDeck.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { addDeck as _addDeck } from \"../../actions/index\";\nimport CustomClickButton from \"../component/CustomClickButton\";\nimport { white, orange, gray, azure, lightPurp } from \"../../utils/colors\";\n\nvar NewDeck = function (_Component) {\n  _inherits(NewDeck, _Component);\n\n  var _super = _createSuper(NewDeck);\n\n  function NewDeck() {\n    var _this;\n\n    _classCallCheck(this, NewDeck);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      text: ''\n    };\n\n    _this.handleChange = function (text) {\n      _this.setState({\n        text: text\n      });\n    };\n\n    _this.handleSubmit = function () {\n      var _this$props = _this.props,\n          addDeck = _this$props.addDeck,\n          navigation = _this$props.navigation;\n      var text = _this.state.text;\n      addDeck(text);\n      navigation.navigate(\"Decks\");\n\n      _this.setState(function () {\n        return {\n          text: ''\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(NewDeck, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          height: 60\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.block,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }, \"What is the title of your new Deck\")), React.createElement(View, {\n        style: [styles.block],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        style: styles.input,\n        value: this.state.text,\n        onChangeText: this.handleChange,\n        placeholder: \"Deck Title\",\n        autoFocus: true,\n        returnKeyType: \"done\",\n        onSubmitEditing: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      })), React.createElement(CustomClickButton, {\n        btnStyle: {\n          backgroundColor: orange,\n          borderColor: white\n        },\n        onPress: this.handleSubmit,\n        disabled: this.state.text === '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }, \"Submit\"));\n    }\n  }]);\n\n  return NewDeck;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 16,\n    paddingLeft: 16,\n    paddingRight: 16,\n    paddingBottom: 16,\n    backgroundColor: azure\n  },\n  block: {\n    marginBottom: 20\n  },\n  title: {\n    textAlign: 'center',\n    fontSize: 32,\n    color: white\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: gray,\n    backgroundColor: white,\n    paddingLeft: 10,\n    paddingRight: 10,\n    borderRadius: 5,\n    fontSize: 20,\n    height: 40,\n    marginBottom: 20\n  }\n});\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addDeck: function addDeck(title) {\n      return dispatch(_addDeck(title));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(NewDeck);","map":{"version":3,"sources":["/home/kinathan/Desktop/RelWorx/FlashCards/components/NewDeck/NewDeck.js"],"names":["React","Component","connect","addDeck","CustomClickButton","white","orange","gray","azure","lightPurp","NewDeck","state","text","handleChange","setState","handleSubmit","props","navigation","navigate","styles","container","height","block","title","input","backgroundColor","borderColor","StyleSheet","create","flex","paddingTop","paddingLeft","paddingRight","paddingBottom","marginBottom","textAlign","fontSize","color","borderWidth","borderRadius","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { Text, View, StyleSheet, TextInput } from 'react-native';\n\nimport { addDeck } from '../../actions/index';\nimport CustomClickButton from '../component/CustomClickButton';\nimport { white, orange, gray,azure, lightPurp } from '../../utils/colors';\n\nclass NewDeck extends Component {\n\n    state = {\n       text: ''\n    };\n      \n    handleChange = text => {\n       this.setState({ text });\n    };\n\n    handleSubmit = () => {\n\n        const { addDeck, navigation } = this.props;\n        const { text } = this.state;\n        addDeck(text);\n\n        navigation.navigate(\"Decks\");\n        this.setState(() => ({ text: '' }));\n    }\n\n    render() {\n    return (\n      <View style={styles.container}>\n        <View style={{ height: 60 }} />\n        <View style={styles.block}>\n          <Text style={styles.title}>What is the title of your new Deck</Text>\n        </View>\n        <View style={[styles.block]}>\n          <TextInput\n            style={styles.input}\n            value={this.state.text}\n            onChangeText={this.handleChange}\n            placeholder=\"Deck Title\"\n            autoFocus={true}\n            returnKeyType=\"done\"\n            onSubmitEditing={this.handleSubmit}\n          />\n        </View>\n        <CustomClickButton\n          btnStyle={{ backgroundColor: orange, borderColor: white }}\n          onPress={this.handleSubmit}\n          disabled={this.state.text === ''}\n        >\n          Submit\n        </CustomClickButton>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      paddingTop: 16,\n      paddingLeft: 16,\n      paddingRight: 16,\n      paddingBottom: 16,\n      backgroundColor: azure\n    },\n    block: {\n      marginBottom: 20\n    },\n    title: {\n      textAlign: 'center',\n      fontSize: 32,\n      color: white\n    },\n    input: {\n      borderWidth: 1,\n      borderColor: gray,\n      backgroundColor: white,\n      paddingLeft: 10,\n      paddingRight: 10,\n      borderRadius: 5,\n      fontSize: 20,\n      height: 40,\n      marginBottom: 20\n    }\n});\n\nconst mapDispatchToProps = (dispatch) => (\n    {\n        addDeck: (title) => dispatch(addDeck(title))\n    }\n)\n  \nexport default connect(null, mapDispatchToProps)(NewDeck);\n"]},"metadata":{},"sourceType":"module"}