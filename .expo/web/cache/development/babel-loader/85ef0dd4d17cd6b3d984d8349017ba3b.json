{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/kinathan/Desktop/RelWorx/FlashCards/components/Navigation/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { createBottomTabNavigator } from 'react-navigation-tabs';\nimport { createStackNavigator, TransitionPresets } from 'react-navigation-stack';\nimport { createAppContainer } from 'react-navigation';\nimport { Ionicons } from '@expo/vector-icons';\nimport Decks from \"../Decks/Decks\";\nimport NewDeck from \"../NewDeck/NewDeck\";\nimport DeckDetails from \"../DeckDetails/DeckDetails\";\nimport NewCard from \"../NewCard/NewCard\";\nimport Quiz from \"../Quiz/Quiz\";\nimport { white, azure, lightPurp, black } from \"../../utils/colors\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nvar Tabs = createBottomTabNavigator({\n  Decks: {\n    screen: Decks,\n    navigationOptions: {\n      title: 'FlashCards',\n      tabBarLabel: 'Decks',\n      tabBarIcon: function tabBarIcon(_ref) {\n        var tintColor = _ref.tintColor;\n        return React.createElement(Ionicons, {\n          name: Platform.OS === 'ios' ? 'ios-list' : 'md-list',\n          size: 30,\n          color: tintColor,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 42\n          }\n        });\n      }\n    }\n  },\n  NewDeck: {\n    screen: NewDeck,\n    navigationOptions: {\n      title: 'FlashCards',\n      tabBarLabel: 'New Deck',\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var tintColor = _ref2.tintColor;\n        return React.createElement(Ionicons, {\n          name: Platform.OS === 'ios' ? 'ios-add-circle-outline' : 'md-add-circle-outline',\n          size: 30,\n          color: tintColor,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 42\n          }\n        });\n      }\n    }\n  }\n}, {\n  tabBarOptions: {\n    activeTintColor: azure,\n    style: {\n      backgroundColor: white\n    }\n  }\n});\n\nTabs.navigationOptions = function (_ref3) {\n  var navigation = _ref3.navigation;\n  var routeName = navigation.state.routes[navigation.state.index].routeName;\n  var headerTitle = routeName;\n  return {\n    headerTitle: headerTitle\n  };\n};\n\nvar MainNavigator = createStackNavigator({\n  Home: {\n    screen: Tabs\n  },\n  DeckDetails: {\n    screen: DeckDetails,\n    navigationOptions: {\n      headerTintColor: azure,\n      headerStyle: {\n        backgroundColor: white\n      }\n    }\n  },\n  NewCard: {\n    screen: NewCard,\n    navigationOptions: {\n      headerTintColor: azure,\n      headerStyle: {\n        backgroundColor: white\n      }\n    }\n  },\n  Quiz: {\n    screen: Quiz,\n    navigationOptions: {\n      headerTintColor: azure,\n      headerStyle: {\n        backgroundColor: white\n      }\n    }\n  }\n}, {\n  defaultNavigationOptions: _objectSpread({}, TransitionPresets.SlideFromRightIOS)\n});\nexport default createAppContainer(MainNavigator);","map":{"version":3,"sources":["/home/kinathan/Desktop/RelWorx/FlashCards/components/Navigation/index.js"],"names":["React","createBottomTabNavigator","createStackNavigator","TransitionPresets","createAppContainer","Ionicons","Decks","NewDeck","DeckDetails","NewCard","Quiz","white","azure","lightPurp","black","Tabs","screen","navigationOptions","title","tabBarLabel","tabBarIcon","tintColor","Platform","OS","tabBarOptions","activeTintColor","style","backgroundColor","navigation","routeName","state","routes","index","headerTitle","MainNavigator","Home","headerTintColor","headerStyle","defaultNavigationOptions","SlideFromRightIOS"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { createBottomTabNavigator } from 'react-navigation-tabs';\nimport { createStackNavigator, TransitionPresets } from 'react-navigation-stack';\nimport { createAppContainer } from 'react-navigation';\nimport { Ionicons } from '@expo/vector-icons';\nimport Decks from '../Decks/Decks';\nimport NewDeck from '../NewDeck/NewDeck';\nimport DeckDetails from '../DeckDetails/DeckDetails';\nimport NewCard from '../NewCard/NewCard';\nimport Quiz from '../Quiz/Quiz';\nimport {white , azure, lightPurp, black } from '../../utils/colors'\nimport { Platform } from 'react-native';\n\n\nconst Tabs = createBottomTabNavigator(\n    {\n      Decks: {\n        screen: Decks,\n        navigationOptions: {\n          title: 'FlashCards',\n          tabBarLabel: 'Decks',\n          tabBarIcon: ({ tintColor }) => <Ionicons name={Platform.OS === 'ios' ? 'ios-list' : 'md-list'} size={30} color={tintColor}/>\n        }\n      },\n      NewDeck: {\n        screen: NewDeck,\n        navigationOptions: {\n          title: 'FlashCards',\n          tabBarLabel: 'New Deck',\n          tabBarIcon: ({ tintColor }) => <Ionicons name={Platform.OS === 'ios' ? 'ios-add-circle-outline' : 'md-add-circle-outline'} size={30} color={tintColor}/>\n        }\n      }\n    },\n      {\n      tabBarOptions: {\n        activeTintColor: azure,\n        style: {\n          backgroundColor: white,\n        },\n      }\n    }\n);\n\nTabs.navigationOptions = ({ navigation }) => {\n  const { routeName } = navigation.state.routes[navigation.state.index];\n  \n  const headerTitle = routeName;\n  return {\n    headerTitle,\n  };\n};\n\nconst MainNavigator = createStackNavigator({\n      Home: {\n        screen: Tabs,\n      },\n      DeckDetails: {\n        screen: DeckDetails,\n        navigationOptions: {\n          headerTintColor: azure,\n          headerStyle: {\n            backgroundColor: white\n          }\n        }\n      },\n      NewCard: {\n        screen: NewCard,\n        navigationOptions: {\n          headerTintColor: azure,\n          headerStyle: {\n            backgroundColor: white\n          }\n        }\n      },\n      Quiz: {\n        screen: Quiz,\n        navigationOptions: {\n          headerTintColor: azure,\n          headerStyle: {\n            backgroundColor: white\n          }\n        },\n      },\n  },\n  {\n    defaultNavigationOptions: {\n      ...TransitionPresets.SlideFromRightIOS, // https://reactnavigation.org/docs/4.x/stack-navigator/ -> TransitionPresets\n    },\n  }\n)\n\nexport default createAppContainer(MainNavigator);"]},"metadata":{},"sourceType":"module"}