{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/kinathan/Desktop/RelWorx/FlashCards/components/Decks/Decks.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { getAllDecks as _getAllDecks } from \"../../actions\";\nimport { connect } from 'react-redux';\nimport Deck from \"../Deck\";\nimport { blue, azure, lightPurp } from \"../../utils/colors\";\n\nvar Decks = function (_Component) {\n  _inherits(Decks, _Component);\n\n  var _super = _createSuper(Decks);\n\n  function Decks() {\n    _classCallCheck(this, Decks);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Decks, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getAllDecks();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          decks = _this$props.decks,\n          navigation = _this$props.navigation;\n      var deckListing = Object.values(decks).map(function (deck) {\n        return React.createElement(TouchableOpacity, {\n          key: deck.title,\n          onPress: function onPress() {\n            return navigation.navigate('DeckDetails', {\n              title: deck.title\n            });\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 17\n          }\n        }, React.createElement(Deck, {\n          id: deck.title,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 19\n          }\n        }));\n      });\n      return React.createElement(ScrollView, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }, deckListing, React.createElement(View, {\n        style: {\n          marginBottom: 30\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }\n      }));\n    }\n  }]);\n\n  return Decks;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 16,\n    paddingRight: 16,\n    backgroundColor: azure,\n    paddingLeft: 16,\n    paddingBottom: 16\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    decks: state\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getAllDecks: function getAllDecks() {\n      return dispatch(_getAllDecks());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Decks);","map":{"version":3,"sources":["/home/kinathan/Desktop/RelWorx/FlashCards/components/Decks/Decks.js"],"names":["React","Component","getAllDecks","connect","Deck","blue","azure","lightPurp","Decks","props","decks","navigation","deckListing","Object","values","map","deck","title","navigate","styles","container","marginBottom","StyleSheet","create","flex","paddingTop","paddingRight","backgroundColor","paddingLeft","paddingBottom","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;AAEA,SAASC,WAAW,IAAXA,YAAT;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP;AACA,SAASC,IAAT,EAAcC,KAAd,EAAqBC,SAArB;;IAGMC,K;;;;;;;;;;;;;wCAEkB;AAChB,WAAKC,KAAL,CAAWP,WAAX;AACH;;;6BAEQ;AAAA;;AAAA,wBAEwB,KAAKO,KAF7B;AAAA,UAEGC,KAFH,eAEGA,KAFH;AAAA,UAEUC,UAFV,eAEUA,UAFV;AAIL,UAAMC,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAcJ,KAAd,EAAqBK,GAArB,CAAyB,UAAAC,IAAI,EAAI;AAEjD,eACI,oBAAC,gBAAD;AACI,UAAA,GAAG,EAAEA,IAAI,CAACC,KADd;AAEI,UAAA,OAAO,EAAE;AAAA,mBACLN,UAAU,CAACO,QAAX,CAAoB,aAApB,EAAmC;AAAED,cAAAA,KAAK,EAAED,IAAI,CAACC;AAAd,aAAnC,CADK;AAAA,WAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAME,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAED,IAAI,CAACC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANF,CADJ;AAWH,OAbmB,CAApB;AAeA,aACI,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAEE,MAAM,CAACC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGR,WADH,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAES,UAAAA,YAAY,EAAE;AAAhB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADJ;AAMH;;;;EA/BepB,S;;AAkCpB,IAAMkB,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC7BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,EAFH;AAGTC,IAAAA,YAAY,EAAE,EAHL;AAITC,IAAAA,eAAe,EAAErB,KAJR;AAKTsB,IAAAA,WAAW,EAAE,EALJ;AAMTC,IAAAA,aAAa,EAAE;AANN;AADkB,CAAlB,CAAf;;AAYA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAAErB,IAAAA,KAAK,EAAEqB;AAAT,GAAL;AAAA,CAA7B;;AAGA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,SACvB;AACG/B,IAAAA,WAAW,EAAE;AAAA,aAAM+B,QAAQ,CAAC/B,YAAW,EAAZ,CAAd;AAAA;AADhB,GADuB;AAAA,CAA3B;;AAMA,eAAeC,OAAO,CAAC2B,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CxB,KAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { ScrollView, View, Text, StyleSheet, TouchableOpacity } from 'react-native';\nimport { getAllDecks } from '../../actions';\nimport { connect } from 'react-redux';\nimport Deck from '../Deck';\nimport { blue,azure, lightPurp } from '../../utils/colors';\n\n\nclass Decks extends Component {\n\n    componentDidMount() {\n        this.props.getAllDecks();\n    }\n    \n    render() {\n\n        const { decks, navigation} = this.props;\n\n        const deckListing = Object.values(decks).map(deck => {\n            \n            return (\n                <TouchableOpacity\n                    key={deck.title}\n                    onPress={() =>\n                        navigation.navigate('DeckDetails', { title: deck.title })\n                    }\n                >\n                  <Deck id={deck.title} />\n                </TouchableOpacity>\n                \n            );\n        })\n\n        return (\n            <ScrollView style={styles.container}>\n              {deckListing}\n              <View style={{ marginBottom: 30 }} />\n            </ScrollView>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      paddingTop: 16,\n      paddingRight: 16,\n      backgroundColor: azure,\n      paddingLeft: 16,\n      paddingBottom: 16,\n    },\n});\n\n// refer to reducers/index.js\nconst mapStateToProps = state => ({ decks: state });\n\n// refer to acions/index.js\nconst mapDispatchToProps = (dispatch) => (\n    {\n       getAllDecks: () => dispatch(getAllDecks()),\n    }\n)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Decks);"]},"metadata":{},"sourceType":"module"}